{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAA4D;;AAErD;AACP;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC,2CAA2C;AAC3C,2CAA2C;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,WAAW;AACX;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,kBAAkB,GAAG,kBAAkB;AACnF;AACA,uBAAuB,gDAAgD,GAAG;AAC1E;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA,wEAAwE,UAAU,eAAe,UAAU;AAC3G,iDAAiD,SAAS;AAC1D;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU,wEAAc;AACxB,OAAO;AACP;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wEAAc;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;;;;;;;;;;;;;;;;;ACzQuD;;;AAGvD;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oEAAQ;;AAEhB;;AAEA;AACA,GAAG;;AAEH;;;;;;;;UCpDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA,YAAY,MAAM;AACyC;;AAE3D;;AAEA;AACA,wEAAc","sources":["webpack://cards/./components/createCards.js","webpack://cards/./difficulty-selection.js","webpack://cards/webpack/bootstrap","webpack://cards/webpack/runtime/define property getters","webpack://cards/webpack/runtime/hasOwnProperty shorthand","webpack://cards/webpack/runtime/make namespace object","webpack://cards/./main.js"],"sourcesContent":["import { gameDifficulty } from '../difficulty-selection.js';\n\nexport function gameMode(appEl) {\n  let pairNumber = null;\n\n  if (window.application.level === '1') {\n      pairNumber = 3;\n  } else if (window.application.level === '2') {\n      pairNumber = 6;\n  } else {\n      pairNumber = 9;\n  }\n\n  const cardRanks = [\n      'ace',\n      'king',\n      'queen',\n      'jack',\n      'ten',\n      'nine',\n      'eight',\n      'seven',\n      'six',\n  ];\n  const cardsSuits = ['spades', 'clubs', 'diamonds', 'hearts'];\n  const cardsUrls = [];\n\n  const getRundommNumber = (number) => {\n      return Math.floor(Math.random() * number);\n  };\n\n  for (let i = 0; i < pairNumber; i++) {\n      let indexRank = getRundommNumber(9); // получаем случайный ранг карты\n      let indexSuit = getRundommNumber(4); // получаем случайную масть карты\n\n      // проверка на дубликаты\n\n      let uniqueCard = false;\n      while (!uniqueCard) {\n          uniqueCard = !cardsUrls.find((elem) => {\n              return (\n                  elem.rank === cardRanks[indexRank] &&\n                  elem.Suit === cardsSuits[indexSuit] // возвращает элемента из массива, удовлетворяющий этому условию, инач undefined\n              ); // проверяем ранг и масть  элемента с полученными индексами с теми что уде есть в массиве\n          });\n          if (!uniqueCard) {\n              indexRank = getRundommNumber(9); // еще раз получаем случайный ранг карты\n              indexSuit = getRundommNumber(4);\n          }\n      }\n\n      let receivedCard = {\n          rank: cardRanks[indexRank],\n          Suit: cardsSuits[indexSuit],\n          cardId: getRundommNumber(100), // даем случаный айди карты, чтобы было удобнее соритровать\n      };\n\n      receivedCard.url = `./static/images/${receivedCard.Suit}-${receivedCard.rank}.png`;\n      cardsUrls.push(receivedCard);\n      cardsUrls.push({ ...receivedCard, cardId: getRundommNumber(100) }); // копируем содержимое объекта receivedCard и имзеняем параметр cardId\n  }\n\n  cardsUrls.sort((a, b) => {\n      if (a.cardId > b.cardId) return 1;\n      else return -1;\n      //https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n  });\n\n  // console.log(cardsUrls);\n\n  let cardString = ``;\n\n  cardsUrls.forEach((item) => {\n      cardString += `<div class=\"gamebox__field-card flip\" data-rank=\"${item.rank}\" data-Suit=\"${item.Suit}\">\n    <img class=\"gamebox__field-card-face\" src=\"${item.url}\" />\n    <img class=\"gamebox__field-card-back\" src=\"./static/images/card_back.svg\" />\n  </div>`;\n  });\n\n  const appHtml = `    <section class=\"gamebox center\">\n    <div class=\"gamebox-heading center\">\n      <div class=\"gamebox__timer\">\n        <div class=\"gamebox__timer-units\">min</div>\n        <div class=\"gamebox__timer-units gamebox__timer-units-sek\">sek</div>\n        <label class=\"gamebox__timer-digits\" id=\"minutes\" data-min=\"\">00</label><span class='gamebox__timer-digits'>.</span><label class=\"gamebox__timer-digits\" id=\"seconds\" data-sec=\"\">00</label>\n      </div>\n      <button class=\"gamebox__restart-button\" id=\"restart\">Начать заново</button>\n    </div>\n    <div class=\"gamebox__field\">\n  ${cardString}\n  </div>\n  </section>\n<div id=\"myModal\" class=\"modal\">\n<div class=\"modal-content\">\n    <img class=\"front-face\"  src=\"\"/>    \n    <p>Вы проиграли!</p>\n    <p> Затраченное время:</p>\n    <p id = \"modal-time\">.</p>\n    <button class=\"gamebox__restart-button\" id=\"restart\">Начать заново</button>\n\n</div>`;\n\n  appEl.innerHTML = appHtml;\n\n//РЕСТАРТ\n\n  function restart() {\n      const restartButton = document.getElementById('restart');\n      restartButton.addEventListener('click', () => {\n          gameDifficulty(appEl);\n      });\n  }\n\n  restart();\n\n//   function winCheck (){\n//     const flippedCards = querySelectorAll ('.flip');\n\n//     console.log(fliped.length);\n//   }\n\n\n  // Таймер\n\n  const minutesLabel = document.getElementById('minutes');\n  const secondsLabel = document.getElementById('seconds');\n  let totalSeconds = 0;\n  const myInterval = setInterval(timer, 1000);\n\n  function timer() {\n          ++totalSeconds;\n          secondsLabel.innerHTML = pad(totalSeconds % 60);\n          minutesLabel.innerHTML = pad(parseInt(totalSeconds / 60));\n          function pad(val) {\n            var valString = val + '';\n            if (valString.length < 2) {\n                return '0' + valString;\n            } else {\n                return valString;\n            }\n        }\n  }\n\n  timer();\n\n//   function getTime() {\n    const allMinutes = document.getElementById(\"minutes\").innerHTML;\n    const allSeconds = document.getElementById(\"seconds\").innerHTML;\n    console.log(allMinutes);\n    console.log(allSeconds);\n//     // const indexM = oneComment.dataset.reply;\n//     let timerElement = document.getElementById('modal-time')\n//     timerElement.textContent = getTime(time)\n\n//   }\n\n\n  //Стоп таймер\n\n  function stopTimer () {\n      clearInterval(myInterval);\n  }\n\n  let isItFlipped = false;\n  let firstCard, secondCard;\n  let blockField = false; //блокирование поля с картами в случае когда переворот карт еще не выполнен, а уже произошел клик на новой карте\n  const cards = document.querySelectorAll('.gamebox__field-card');\n\n  // console.log(cards);\n\n  const timeoutTillStart = () => {\n      blockField = true;\n      setTimeout(() => {\n          cards.forEach((element) => {\n              element.classList.remove('flip');\n              blockField = false;\n          });\n      }, 5000);\n  };\n  // необходима блокировка карт на момент просмотра, с последующей разблокировкой\n  timeoutTillStart();\n\n    //Переворачиваем карту\n  function flipCard() {\n      if (blockField) return;\n      if (this === firstCard) return;\n\n      this.classList.add('flip');\n\n      if (!isItFlipped) {\n          isItFlipped = true;\n          firstCard = this;\n      } else {\n          isItFlipped = false;\n          secondCard = this;\n          // console.log(firstCard.dataset.rank);\n          // console.log(secondCard.dataset.rank);\n\n          match();\n      }\n      // console.log('done');\n  }\n\n  // console.log(\"click\");\n  // console.log(this);\n  // console.log({ isItFlipped, firstCard });\n\n  // проверка на совпадение\n\n  function match() {\n      setTimeout(() => {\n          // необходима задержка по выводу сообщения о победе/поражении, т.к. сравнение происходит в момент клика, а это очень быстро = bad UX/UI\n          if (\n              firstCard.dataset.rank === secondCard.dataset.rank &&\n              firstCard.dataset.Suit === secondCard.dataset.Suit\n          ) {\n              preventClick();\n            //   alert('Вы выйграли');\n          } else {\n            //   alert('Вы проиграли');\n            const modal = document.getElementById(\"myModal\");\n            modal.style.display = \"block\";\n            stopTimer();\n            // getTime();\n            window.onclick = function(event) {\n            if (event.target === modal) {              \n                gameDifficulty(appEl);\n            }\n            };\n            //   turnBack();\n          }\n      }, 500);\n  }\n\n  // запрет на повторный клик по карте\n\n  function preventClick() {\n      firstCard.removeEventListener('click', flipCard);\n      secondCard.removeEventListener('click', flipCard);\n      preventDoubleClick();\n  }\n\n  // переворачивание карт обратно\n\n  function turnBack() {\n      blockField = true;\n      setTimeout(() => {\n          firstCard.classList.remove('flip');\n          secondCard.classList.remove('flip');\n          blockField = false;\n          preventDoubleClick();\n      }, 500);\n  }\n\n  function preventDoubleClick() {\n      isItFlipped = false;\n      blockField = false;\n      firstCard = null;\n      secondCard = null;\n  }\n\n  cards.forEach((card) => {\n      card.addEventListener('click', flipCard);\n  });\n\n}\n\n\n","import { gameMode } from \"./components/createCards.js\";\n\n\nwindow.application = {\n  level: null,\n};\n\nexport function gameDifficulty(appEl) {\n  const renderGameDifficulty = (appEl) => {\n    const appHtml = `<section class=\"game\">\n        <div class=\"game__menu\">          \n            <h2 class=\"game__menu-heading\">\n                Выбери <br/>\n                сложность\n              </h2>\n            <form class=\"difficulty\" id=\"difficulty-form\">\n                <div class=\"difficulty-box\">\n                    <input class=\"difficulty__type\" type=\"radio\" id=\"game1\" name=\"game\" value=\"1\" checked>\n                    <label for=\"game1\">1</label>\n            \n                    <input class=\"difficulty__type\" type=\"radio\" id=\"game2\" name=\"game\" value=\"2\">\n                    <label for=\"game2\">2</label>\n            \n                    <input class=\"difficulty__type\" type=\"radio\" id=\"game3\" name=\"game\" value=\"3\">\n                    <label for=\"game3\">3</label>\n                </div>\n\n                <button class=\"game__menu-button\" type=\"submit\">Старт</button> \n            </form>\n        </div>\n    </section>`;\n    appEl.innerHTML = appHtml;\n  };\n  renderGameDifficulty(appEl);\n\n  const formButton = document.querySelector(\"#difficulty-form\");\n  // https://ru.stackoverflow.com/questions/845045/%D0%A1%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D0%B5-submit-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA-%D1%81%D0%BE%D0%B1%D1%8B%D1%82%D0%B8%D1%8F\n  //   console.log(difficultyLevels);\n  //   console.log(startButton);\n  formButton.addEventListener(\"submit\", () => {\n    const difficultyLevels = document.querySelectorAll(\".difficulty__type\");\n    for (const difficultyLevel of difficultyLevels) {\n      if (difficultyLevel.checked) {\n        window.application.level = difficultyLevel.value;\n        // if (difficultyLevel.value === \"1\")\n        gameMode(appEl);\n\n      }\n\n    }\n  });\n\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import { doc } from \"prettier\";\nimport { gameDifficulty } from './difficulty-selection.js';\n\nconst appEl = document.getElementById('app');\n\n//Выбор уровня сложности\ngameDifficulty(appEl);\n"],"names":[],"sourceRoot":""}